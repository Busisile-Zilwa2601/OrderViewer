@model PaginatedOrders
@{
    var filter = ViewBag.Filter as OrderFilter;
}

<div class="row col-12">
		<form id="filter-form" method="get">
			<div class="row mb-3">
				<div class="col-12 d-flex justify-content-between align-items-center flex-wrap">
					<div class="d-flex flex-wrap gap-3">
						<div>
							<label for="fromDate">From Date</label>
							<input type="date" id="fromDate" name="FromDate" class="form-control"
								   value="@(filter?.FromDate?.ToString("yyyy-MM-ddHH:mm:ss"))" />
						</div>
						<div>
							<label for="toDate">To Date</label>
							<input type="date" id="toDate" name="ToDate" class="form-control"
							   value="@(filter?.ToDate?.ToString("yyyy-MM-ddHH:mm:ss"))" />
						</div>
					</div>
					<div id="order-summary" class="text-end mt-3 mt-md-0">
						<div><strong>Filtered Orders:</strong> <span id="order-count">0</span></div>
						<div><strong>Grand Total:</strong> <span id="order-total">0</span></div>
					</div>
				</div>
			</div> 
			<br />
			<hr />
			<div class="d-flex align-items-center gap-2 mb-3">
				<label for="pageSize">Rows per page:</label>
				<select id="pageSize" name="PageSize" class="form-select" style="width: auto;">
					@foreach (var size in new[] { 5, 10, 20, 30 })
					{
					var selected = (filter?.PageSize ?? 10) == size;
						<option value="@size" selected="@selected" >@size</option>
					}
				</select>
			</div>
			<table class="table">
				<thead>
					<!--Header row -->
					<tr>
						<th>Order Id</th>
						<th>Customer</th>
						<th>Status</th>
						<th>Total</th>
						<th>Created Date</th>
					</tr>
					<!--Filter row-->
					<tr>
						<th>
							<input type="text" name="OrderId" value="@filter?.OrderId" class="form-control" placeholder="Order ID" />
						</th>
						<th>
							<input type="text" name="Customer" value="@filter?.Customer" class="form-control" placeholder="Customer" />
						</th>
						<th>
							<select name="Status" class="form-control">
								<option value="">All</option>
								@foreach (var status in Enum.GetValues(typeof(OrderStatus)).Cast<OrderStatus>())
								{
									var selected = filter?.Status == status.ToString() ? true : false;
									<option value="@status" selected="@selected">@status</option>
								}
							</select>
						</th>
						<th></th>
						<th></th>
					</tr>
				</thead>
				<tbody id="results-container">
						@await Html.PartialAsync("_OrderTablePartial", Model)
				</tbody>
			</table>

			<div id="pagination-container">
				@await Html.PartialAsync("_PaginatingPartial", Model)
			</div>
		</form>	
</div>
@* <div class="row col-12">
	<div class="text-end">
		<a class="btn btn-outline-primary" asp-controller="OrderViewer" asp-action="OrderCreate">
			<i class="bi bi-plus-square"></i>
			Create New Order
		</a>
	</div>
</div> *@
@section Scripts {
	<script src="~/js/main.js"></script>
	<script src="~/js/widget-summary.js"></script>
	<script src="~/js/OrderItems.js"></script>
}
