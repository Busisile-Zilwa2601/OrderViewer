// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderViewer.Service.OrderAPI.ContextData;

#nullable disable

namespace OrderViewer.Service.OrderAPI.Migrations
{
    [DbContext(typeof(OrderService_DbContext))]
    [Migration("20250815142516_UpdateProductPrecision2")]
    partial class UpdateProductPrecision2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderViewer.Service.OrderAPI.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Customer");

                    b.HasIndex("Status");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("ea380f5a-59e8-42a8-8dde-4504bb2e0ab0"),
                            CreatedAt = new DateTime(2025, 8, 15, 14, 25, 16, 260, DateTimeKind.Utc).AddTicks(1359),
                            Customer = "Lewis Hamilton ",
                            Status = 0,
                            Total = 10000.00m
                        });
                });

            modelBuilder.Entity("OrderViewer.Service.OrderAPI.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("OrderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("7d44223c-2f17-4ca6-aeaa-3d9b4f56311d"),
                            Name = "Laptop",
                            OrderId = new Guid("ea380f5a-59e8-42a8-8dde-4504bb2e0ab0"),
                            Quantity = 1,
                            UnitPrice = 8500m
                        },
                        new
                        {
                            ProductId = new Guid("54b92b29-2652-427a-9a28-36623afc393d"),
                            Name = "Mouse",
                            OrderId = new Guid("ea380f5a-59e8-42a8-8dde-4504bb2e0ab0"),
                            Quantity = 2,
                            UnitPrice = 250m
                        },
                        new
                        {
                            ProductId = new Guid("bd9b617f-42ef-4e70-8bf9-dd2ea2625bab"),
                            Name = "Keyboard",
                            OrderId = new Guid("ea380f5a-59e8-42a8-8dde-4504bb2e0ab0"),
                            Quantity = 2,
                            UnitPrice = 500m
                        });
                });

            modelBuilder.Entity("OrderViewer.Service.OrderAPI.Models.Product", b =>
                {
                    b.HasOne("OrderViewer.Service.OrderAPI.Models.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderViewer.Service.OrderAPI.Models.Order", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
